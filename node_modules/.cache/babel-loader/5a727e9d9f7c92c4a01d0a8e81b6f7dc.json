{"ast":null,"code":"import * as ActionType from \"/home/priyanka/react-appl/src/Redux/ActionTypes.js\";\nimport { baseUrl } from \"/home/priyanka/react-appl/src/baseUrl.js\";\nexport const addComment = comment => ({\n  type: ActionType.ADD_COMMENTS,\n  payload: comment\n});\nexport const addFeedback = feedback => ({\n  type: ActionType.ADD_FEEDBACK,\n  payload: feedback\n});\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + 'feedback', {\n    method: 'POST',\n    body: JSON.stringify(newFeedback),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'same-origin'\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error('Error' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errmsg = new Error(error.message);\n    throw errmsg;\n  }).then(response => response.json()).then(response => dispatch(addFee(response))).catch(error => {\n    console.log(\"post error\" + error.message);\n    alert(\"your comment cannot be posted \\n Error\" + error.message);\n  });\n};\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'same-origin'\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error('Error' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errmsg = new Error(error.message);\n    throw errmsg;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log(\"post error\" + error.message);\n    alert(\"your comment cannot be posted \\n Error\" + error.message);\n  });\n};\nexport const featchDishes = () => dispatch => {\n  dispatch(dishLoading(false));\n  return fetch(baseUrl + 'dishes').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error('Error' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errmsg = new Error(error.message);\n    throw errmsg;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => {\n    dispatch(dishesFailed(error.message));\n  });\n};\nexport const dishLoading = () => ({\n  type: ActionType.DISHES_LOADING\n});\nexport const dishesFailed = errmsg => ({\n  type: ActionType.DISHES_FAILED,\n  payload: errmsg\n});\nexport const addDishes = dishes => ({\n  type: ActionType.ADD_DISHES,\n  payload: dishes\n});\nexport const featchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error('Error' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errmsg = new Error(error.message);\n    throw errmsg;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => {\n    dispatch(commentsFailed(error.message));\n  });\n};\nexport const commentsFailed = errmsg => ({\n  type: ActionType.COMMENTS_FAILED,\n  payload: errmsg\n});\nexport const addComments = comments => ({\n  type: ActionType.ADD_COMMENT,\n  payload: comments\n});\nexport const featchPromos = () => dispatch => {\n  dispatch(promosLoading(false));\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error('Error' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errmsg = new Error(error.message);\n    throw errmsg;\n  }).then(response => response.json()).then(promotions => dispatch(addPromos(promotions))).catch(error => {\n    dispatch(promosFailed(error.message));\n  });\n};\nexport const promosLoading = () => ({\n  type: ActionType.PROMOS_LOADING\n});\nexport const promosFailed = errmsg => ({\n  type: ActionType.PROMOS_FAILED,\n  payload: errmsg\n});\nexport const addPromos = promotions => ({\n  type: ActionType.ADD_PROMOS,\n  payload: promotions\n});","map":{"version":3,"sources":["/home/priyanka/react-appl/src/Redux/ActionCreator.js"],"names":["ActionType","baseUrl","addComment","comment","type","ADD_COMMENTS","payload","addFeedback","feedback","ADD_FEEDBACK","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","newFeedback","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","errmsg","json","dispatch","addFee","catch","console","log","alert","postComment","dishId","rating","author","newComment","featchDishes","dishLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","featchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENT","featchPromos","promosLoading","promotions","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,oDAA5B;AACA,SAAQC,OAAR,QAAsB,0CAAtB;AAEA,OAAO,MAAMC,UAAU,GAAKC,OAAF,KACrB;AACGC,EAAAA,IAAI,EAAEJ,UAAU,CAACK,YADpB;AAEGC,EAAAA,OAAO,EAACH;AAFX,CADqB,CAAnB;AAMP,OAAO,MAAMI,WAAW,GAAEC,QAAD,KAErB;AACIJ,EAAAA,IAAI,EAACJ,UAAU,CAACS,YADpB;AAEIH,EAAAA,OAAO,EAACE;AAFZ,CAFqB,CAAlB;AAOP,OAAO,MAAME,YAAY,GAAC,CAACC,SAAD,EAAWC,QAAX,EAAoBC,MAApB,EAA2BC,KAA3B,EAAiCC,KAAjC,EAAuCC,WAAvC,EAAmDC,OAAnD,KAA6D;AACnF,QAAMC,WAAW,GAAC;AACdP,IAAAA,SAAS,EAACA,SADI;AAEdC,IAAAA,QAAQ,EAACA,QAFK;AAGdC,IAAAA,MAAM,EAACA,MAHO;AAIdC,IAAAA,KAAK,EAACA,KAJQ;AAKdC,IAAAA,KAAK,EAACA,KALQ;AAMdC,IAAAA,WAAW,EAACA,WANE;AAOdC,IAAAA,OAAO,EAACA;AAPM,GAAlB;AASAC,EAAAA,WAAW,CAACC,IAAZ,GAAiB,IAAIC,IAAJ,GAAWC,WAAX,EAAjB;AACA,SAAOC,KAAK,CAACrB,OAAO,GAAC,UAAT,EAAoB;AAC5BsB,IAAAA,MAAM,EAAC,MADqB;AAE5BC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeR,WAAf,CAFuB;AAG5BS,IAAAA,OAAO,EAAC;AACJ,sBAAe;AADX,KAHoB;AAM5BC,IAAAA,WAAW,EAAC;AANgB,GAApB,CAAL,CAQNC,IARM,CAQDC,QAAQ,IAAE;AACZ,QAAGA,QAAQ,CAACC,EAAZ,EACA;AACI,aAAOD,QAAP;AACH,KAHD,MAII;AACA,YAAME,KAAK,GAAC,IAAIC,KAAJ,CAAU,UAAQH,QAAQ,CAACI,MAAjB,GAAwB,IAAxB,GAA8BJ,QAAQ,CAACK,UAAjD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAeA,QAAf;AACA,YAAME,KAAN;AACH;AACJ,GAlBM,EAmBPA,KAAK,IAAE;AACN,UAAQI,MAAM,GAAC,IAAIH,KAAJ,CAAUD,KAAK,CAACf,OAAhB,CAAf;AACG,UAAMmB,MAAN;AACH,GAtBM,EAuBNP,IAvBM,CAuBDC,QAAQ,IAAEA,QAAQ,CAACO,IAAT,EAvBT,EAwBNR,IAxBM,CAwBDC,QAAQ,IAAEQ,QAAQ,CAACC,MAAM,CAACT,QAAD,CAAP,CAxBjB,EAyBNU,KAzBM,CAyBAR,KAAK,IAAE;AACVS,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAaV,KAAK,CAACf,OAA/B;AACA0B,IAAAA,KAAK,CAAC,2CAAyCX,KAAK,CAACf,OAAhD,CAAL;AACH,GA5BM,CAAP;AA6BH,CAxCM;AAyCP,OAAO,MAAM2B,WAAW,GAAC,CAACC,MAAD,EAAQC,MAAR,EAAeC,MAAf,EAAsB5C,OAAtB,KAAiCmC,QAAD,IACzD;AACI,QAAMU,UAAU,GAChB;AACIH,IAAAA,MAAM,EAACA,MADX;AAEIC,IAAAA,MAAM,EAACA,MAFX;AAGIC,IAAAA,MAAM,EAACA,MAHX;AAII5C,IAAAA,OAAO,EAACA;AAJZ,GADA;AAOA6C,EAAAA,UAAU,CAAC7B,IAAX,GAAgB,IAAIC,IAAJ,GAAWC,WAAX,EAAhB;AACA,SAAOC,KAAK,CAACrB,OAAO,GAAC,UAAT,EAAoB;AAC5BsB,IAAAA,MAAM,EAAC,MADqB;AAE5BC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAesB,UAAf,CAFuB;AAG5BrB,IAAAA,OAAO,EAAC;AACJ,sBAAe;AADX,KAHoB;AAM5BC,IAAAA,WAAW,EAAC;AANgB,GAApB,CAAL,CAQNC,IARM,CAQDC,QAAQ,IAAE;AACZ,QAAGA,QAAQ,CAACC,EAAZ,EACA;AACI,aAAOD,QAAP;AACH,KAHD,MAII;AACA,YAAME,KAAK,GAAC,IAAIC,KAAJ,CAAU,UAAQH,QAAQ,CAACI,MAAjB,GAAwB,IAAxB,GAA8BJ,QAAQ,CAACK,UAAjD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAeA,QAAf;AACA,YAAME,KAAN;AACH;AACJ,GAlBM,EAmBPA,KAAK,IAAE;AACN,UAAQI,MAAM,GAAC,IAAIH,KAAJ,CAAUD,KAAK,CAACf,OAAhB,CAAf;AACG,UAAMmB,MAAN;AACH,GAtBM,EAuBNP,IAvBM,CAuBDC,QAAQ,IAAEA,QAAQ,CAACO,IAAT,EAvBT,EAwBNR,IAxBM,CAwBDC,QAAQ,IAAEQ,QAAQ,CAACpC,UAAU,CAAC4B,QAAD,CAAX,CAxBjB,EAyBNU,KAzBM,CAyBAR,KAAK,IAAE;AACVS,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAaV,KAAK,CAACf,OAA/B;AACA0B,IAAAA,KAAK,CAAC,2CAAyCX,KAAK,CAACf,OAAhD,CAAL;AACH,GA5BM,CAAP;AA6BH,CAvCM;AA0CN,OAAO,MAAMgC,YAAY,GAAC,MAAKX,QAAD,IAC9B;AACIA,EAAAA,QAAQ,CAACY,WAAW,CAAC,KAAD,CAAZ,CAAR;AACD,SAAO5B,KAAK,CAACrB,OAAO,GAAC,QAAT,CAAL,CACN4B,IADM,CACDC,QAAQ,IAAE;AACZ,QAAGA,QAAQ,CAACC,EAAZ,EACA;AACI,aAAOD,QAAP;AACH,KAHD,MAII;AACA,YAAME,KAAK,GAAC,IAAIC,KAAJ,CAAU,UAAQH,QAAQ,CAACI,MAAjB,GAAwB,IAAxB,GAA8BJ,QAAQ,CAACK,UAAjD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAeA,QAAf;AACA,YAAME,KAAN;AACH;AACJ,GAXM,EAYPA,KAAK,IAAE;AACN,UAAQI,MAAM,GAAC,IAAIH,KAAJ,CAAUD,KAAK,CAACf,OAAhB,CAAf;AACG,UAAMmB,MAAN;AACH,GAfM,EAiBNP,IAjBM,CAiBDC,QAAQ,IAAEA,QAAQ,CAACO,IAAT,EAjBT,EAkBNR,IAlBM,CAkBDsB,MAAM,IAAEb,QAAQ,CAACc,SAAS,CAACD,MAAD,CAAV,CAlBf,EAmBNX,KAnBM,CAmBAR,KAAK,IAAE;AAACM,IAAAA,QAAQ,CAACe,YAAY,CAACrB,KAAK,CAACf,OAAP,CAAb,CAAR;AAAsC,GAnB9C,CAAP;AAoBF,CAvBM;AAyBP,OAAO,MAAMiC,WAAW,GAAC,OAAK;AAC1B9C,EAAAA,IAAI,EAACJ,UAAU,CAACsD;AADU,CAAL,CAAlB;AAGP,OAAO,MAAMD,YAAY,GAAEjB,MAAD,KAAW;AAC9BhC,EAAAA,IAAI,EAACJ,UAAU,CAACuD,aADc;AAE9BjD,EAAAA,OAAO,EAAC8B;AAFsB,CAAX,CAAnB;AAIP,OAAO,MAAMgB,SAAS,GAAED,MAAD,KACnB;AAEI/C,EAAAA,IAAI,EAACJ,UAAU,CAACwD,UAFpB;AAGIlD,EAAAA,OAAO,EAAC6C;AAHZ,CADmB,CAAhB;AAOP,OAAO,MAAMM,cAAc,GAAC,MAAKnB,QAAD,IAChC;AACG,SAAOhB,KAAK,CAACrB,OAAO,GAAC,UAAT,CAAL,CACN4B,IADM,CACDC,QAAQ,IAAE;AACZ,QAAGA,QAAQ,CAACC,EAAZ,EACA;AACI,aAAOD,QAAP;AACH,KAHD,MAII;AACA,YAAME,KAAK,GAAC,IAAIC,KAAJ,CAAU,UAAQH,QAAQ,CAACI,MAAjB,GAAwB,IAAxB,GAA8BJ,QAAQ,CAACK,UAAjD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAeA,QAAf;AACA,YAAME,KAAN;AACH;AACJ,GAXM,EAYPA,KAAK,IAAE;AACJ,UAAOI,MAAM,GAAC,IAAIH,KAAJ,CAAUD,KAAK,CAACf,OAAhB,CAAd;AACC,UAAMmB,MAAN;AACH,GAfM,EAiBNP,IAjBM,CAiBDC,QAAQ,IAAEA,QAAQ,CAACO,IAAT,EAjBT,EAkBNR,IAlBM,CAkBD6B,QAAQ,IAAEpB,QAAQ,CAACqB,WAAW,CAACD,QAAD,CAAZ,CAlBjB,EAmBNlB,KAnBM,CAmBAR,KAAK,IAAE;AAACM,IAAAA,QAAQ,CAACsB,cAAc,CAAC5B,KAAK,CAACf,OAAP,CAAf,CAAR;AAAwC,GAnBhD,CAAP;AAoBF,CAtBM;AAwBP,OAAO,MAAM2C,cAAc,GAAExB,MAAD,KAAW;AACpChC,EAAAA,IAAI,EAACJ,UAAU,CAAC6D,eADoB;AAEpCvD,EAAAA,OAAO,EAAC8B;AAF4B,CAAX,CAArB;AAIR,OAAO,MAAMuB,WAAW,GAAED,QAAD,KACxB;AAEItD,EAAAA,IAAI,EAACJ,UAAU,CAAC8D,WAFpB;AAGIxD,EAAAA,OAAO,EAACoD;AAHZ,CADwB,CAAlB;AAQP,OAAO,MAAMK,YAAY,GAAC,MAAKzB,QAAD,IAC7B;AACIA,EAAAA,QAAQ,CAAC0B,aAAa,CAAC,KAAD,CAAd,CAAR;AACD,SAAO1C,KAAK,CAACrB,OAAO,GAAC,YAAT,CAAL,CACN4B,IADM,CACDC,QAAQ,IAAE;AACZ,QAAGA,QAAQ,CAACC,EAAZ,EACA;AACI,aAAOD,QAAP;AACH,KAHD,MAII;AACA,YAAME,KAAK,GAAC,IAAIC,KAAJ,CAAU,UAAQH,QAAQ,CAACI,MAAjB,GAAwB,IAAxB,GAA8BJ,QAAQ,CAACK,UAAjD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAeA,QAAf;AACA,YAAME,KAAN;AACH;AACJ,GAXM,EAYPA,KAAK,IAAE;AACL,UAAOI,MAAM,GAAC,IAAIH,KAAJ,CAAUD,KAAK,CAACf,OAAhB,CAAd;AACE,UAAMmB,MAAN;AACH,GAfM,EAiBNP,IAjBM,CAiBDC,QAAQ,IAAEA,QAAQ,CAACO,IAAT,EAjBT,EAkBNR,IAlBM,CAkBDoC,UAAU,IAAE3B,QAAQ,CAAC4B,SAAS,CAACD,UAAD,CAAV,CAlBnB,EAmBNzB,KAnBM,CAmBAR,KAAK,IAAE;AAACM,IAAAA,QAAQ,CAAC6B,YAAY,CAACnC,KAAK,CAACf,OAAP,CAAb,CAAR;AAAsC,GAnB9C,CAAP;AAoBF,CAvBK;AAyBN,OAAO,MAAM+C,aAAa,GAAC,OAAK;AAC5B5D,EAAAA,IAAI,EAACJ,UAAU,CAACoE;AADY,CAAL,CAApB;AAGP,OAAO,MAAMD,YAAY,GAAE/B,MAAD,KAAW;AAC9BhC,EAAAA,IAAI,EAACJ,UAAU,CAACqE,aADc;AAE9B/D,EAAAA,OAAO,EAAC8B;AAFsB,CAAX,CAAnB;AAIP,OAAO,MAAM8B,SAAS,GAAED,UAAD,KACnB;AAEI7D,EAAAA,IAAI,EAACJ,UAAU,CAACsE,UAFpB;AAGIhE,EAAAA,OAAO,EAAC2D;AAHZ,CADmB,CAAhB","sourcesContent":["import * as ActionType from \"/home/priyanka/react-appl/src/Redux/ActionTypes.js\";\nimport {baseUrl} from \"/home/priyanka/react-appl/src/baseUrl.js\";\n\nexport const addComment = ( comment) =>\n    ({\n        type: ActionType.ADD_COMMENTS,\n        payload:comment\n    });\n\nexport const addFeedback=(feedback)=>\n(\n    {\n        type:ActionType.ADD_FEEDBACK,\n        payload:feedback\n    }\n);\nexport const postFeedback=(firstname,lastname,telnum,email,agree,contactType,message)=>{\n    const newFeedback={\n        firstname:firstname,\n        lastname:lastname,\n        telnum:telnum,\n        email:email,\n        agree:agree,\n        contactType:contactType,\n        message:message\n    }\n    newFeedback.date=new Date().toISOString();\n    return fetch(baseUrl+'feedback',{\n        method:'POST',\n        body:JSON.stringify(newFeedback),\n        headers:{\n            'Content-Type':'application/json'\n        },\n        credentials:'same-origin'\n    })\n    .then(response=>{\n        if(response.ok)\n        {\n            return response;\n        }\n        else{\n            const error=new Error('Error'+response.status+': ' +response.statusText);\n            error.response=response;\n            throw error;\n        }\n    },\n    error=>{\n     const   errmsg=new Error(error.message);\n        throw errmsg;\n    })\n    .then(response=>response.json())\n    .then(response=>dispatch(addFee(response)))\n    .catch(error=>{\n        console.log(\"post error\"+error.message)\n        alert(\"your comment cannot be posted \\n Error\"+error.message);\n    })\n}\nexport const postComment=(dishId,rating,author,comment)=>(dispatch)=>\n{\n    const newComment=\n    {\n        dishId:dishId,\n        rating:rating,\n        author:author,\n        comment:comment\n    }\n    newComment.date=new Date().toISOString();\n    return fetch(baseUrl+'comments',{\n        method:'POST',\n        body:JSON.stringify(newComment),\n        headers:{\n            'Content-Type':'application/json'\n        },\n        credentials:'same-origin'\n    })\n    .then(response=>{\n        if(response.ok)\n        {\n            return response;\n        }\n        else{\n            const error=new Error('Error'+response.status+': ' +response.statusText);\n            error.response=response;\n            throw error;\n        }\n    },\n    error=>{\n     const   errmsg=new Error(error.message);\n        throw errmsg;\n    })\n    .then(response=>response.json())\n    .then(response=>dispatch(addComment(response)))\n    .catch(error=>{\n        console.log(\"post error\"+error.message)\n        alert(\"your comment cannot be posted \\n Error\"+error.message);\n    })\n}\n\n\n export const featchDishes=()=>(dispatch)=>\n {\n     dispatch(dishLoading(false));\n    return fetch(baseUrl+'dishes')\n    .then(response=>{\n        if(response.ok)\n        {\n            return response;\n        }\n        else{\n            const error=new Error('Error'+response.status+': ' +response.statusText);\n            error.response=response;\n            throw error;\n        }\n    },\n    error=>{\n     const   errmsg=new Error(error.message);\n        throw errmsg;\n    }\n    )\n    .then(response=>response.json())\n    .then(dishes=>dispatch(addDishes(dishes)))\n    .catch(error=>{dispatch(dishesFailed(error.message))})\n }\n \n export const dishLoading=()=>({\n     type:ActionType.DISHES_LOADING\n });\n export const dishesFailed=(errmsg)=>({\n        type:ActionType.DISHES_FAILED,\n        payload:errmsg\n });\n export const addDishes=(dishes)=>(\n     {\n        \n         type:ActionType.ADD_DISHES,\n         payload:dishes\n     }\n )\n export const featchComments=()=>(dispatch)=>\n {\n    return fetch(baseUrl+'comments')\n    .then(response=>{\n        if(response.ok)\n        {\n            return response;\n        }\n        else{\n            const error=new Error('Error'+response.status+': ' +response.statusText);\n            error.response=response;\n            throw error;\n        }\n    },\n    error=>{\n       const  errmsg=new Error(error.message);\n        throw errmsg;\n    }\n    )\n    .then(response=>response.json())\n    .then(comments=>dispatch(addComments(comments)))\n    .catch(error=>{dispatch(commentsFailed(error.message))})\n }\n\n export const commentsFailed=(errmsg)=>({\n    type:ActionType.COMMENTS_FAILED,\n    payload:errmsg\n});\nexport const addComments=(comments)=>(\n {\n    \n     type:ActionType.ADD_COMMENT,\n     payload:comments\n }\n)\n\nexport const featchPromos=()=>(dispatch)=>\n {\n     dispatch(promosLoading(false));\n    return fetch(baseUrl+'promotions')\n    .then(response=>{\n        if(response.ok)\n        {\n            return response;\n        }\n        else{\n            const error=new Error('Error'+response.status+': ' +response.statusText);\n            error.response=response;\n            throw error;\n        }\n    },\n    error=>{\n      const  errmsg=new Error(error.message);\n        throw errmsg;\n    }\n    )\n    .then(response=>response.json())\n    .then(promotions=>dispatch(addPromos(promotions)))\n    .catch(error=>{dispatch(promosFailed(error.message))})\n }\n \n export const promosLoading=()=>({\n     type:ActionType.PROMOS_LOADING\n });\n export const promosFailed=(errmsg)=>({\n        type:ActionType.PROMOS_FAILED,\n        payload:errmsg\n });\n export const addPromos=(promotions)=>(\n     {\n        \n         type:ActionType.ADD_PROMOS,\n         payload:promotions\n     }\n )"]},"metadata":{},"sourceType":"module"}