{"ast":null,"code":"import _defineProperty from \"/home/priyanka/react-appl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import {COMMENTS} from \"/home/priyanka/react-appl/src/component/comments.js\";\nimport * as ActionType from \"/home/priyanka/react-appl/src/Redux/ActionTypes.js\";\nexport const Comments = (state = {\n  errMsg: null,\n  comments: []\n}, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_COMMENT:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        isLoading: false,\n        errmsg: null,\n        comments: action.payload\n      });\n\n    case actionTypes.DISHES_FAILED:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        errmsg: action.payload,\n        dishes: []\n      });\n\n    case ActionType.ADD_COMMENTS:\n      var comment = action.payload;\n      comment.id = state.length;\n      comment.date = new Date().toISOString();\n      return state.concat(comment);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/priyanka/react-appl/src/Redux/comments.js"],"names":["ActionType","Comments","state","errMsg","comments","action","type","actionTypes","ADD_COMMENT","console","log","payload","isLoading","errmsg","DISHES_FAILED","dishes","ADD_COMMENTS","comment","id","length","date","Date","toISOString","concat"],"mappings":";;;;;;AACA;AACA,OAAO,KAAKA,UAAZ,MAA4B,oDAA5B;AACA,OAAO,MAAMC,QAAQ,GAAC,CAACC,KAAK,GAAC;AACzBC,EAAAA,MAAM,EAAC,IADkB;AAEzBC,EAAAA,QAAQ,EAAC;AAFgB,CAAP,EAGpBC,MAHoB,KAItB;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKC,WAAW,CAACC,WAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,OAAnB;AACC,+BACOT,KADP;AAEIU,QAAAA,SAAS,EAAE,KAFf;AAGIC,QAAAA,MAAM,EAAE,IAHZ;AAIIT,QAAAA,QAAQ,EAAEC,MAAM,CAACM;AAJrB;;AAML,SAAKJ,WAAW,CAACO,aAAjB;AAEI,+BACWZ,KADX;AAEQU,QAAAA,SAAS,EAAC,KAFlB;AAGQC,QAAAA,MAAM,EAACR,MAAM,CAACM,OAHtB;AAIQI,QAAAA,MAAM,EAAC;AAJf;;AAMJ,SAAKf,UAAU,CAACgB,YAAhB;AACI,UAAIC,OAAO,GAACZ,MAAM,CAACM,OAAnB;AACAM,MAAAA,OAAO,CAACC,EAAR,GAAWhB,KAAK,CAACiB,MAAjB;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAa,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,aAAOpB,KAAK,CAACqB,MAAN,CAAaN,OAAb,CAAP;;AACJ;AACI,aAAOf,KAAP;AAxBR;AA0BH,CA/BM","sourcesContent":["\n// import {COMMENTS} from \"/home/priyanka/react-appl/src/component/comments.js\";\nimport * as ActionType from \"/home/priyanka/react-appl/src/Redux/ActionTypes.js\";\nexport const Comments=(state={\n    errMsg:null,\n    comments:[]\n},action)=>\n{\n    switch(action.type)\n    {\n        case actionTypes.ADD_COMMENT:\n            console.log(action.payload);\n             return {\n                 ...state,\n                 isLoading: false,\n                 errmsg: null,\n                 comments: action.payload\n             }\n        case actionTypes.DISHES_FAILED:\n            \n            return { \n                    ...state, \n                    isLoading:false, \n                    errmsg:action.payload, \n                    dishes:[] }     \n             \n        case ActionType.ADD_COMMENTS:\n            var comment=action.payload;\n            comment.id=state.length;\n            comment.date=new Date().toISOString();\n            return state.concat(comment);\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}