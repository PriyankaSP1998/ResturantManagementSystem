{"ast":null,"code":"import _defineProperty from \"/home/priyanka/react-appl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\"; // import {Reducer,initialState} from \"./reducer\";\n\nimport { Dishes } from \"./dishes\";\nimport { Leaders } from \"./leaders\";\nimport { Comments } from \"./comments\";\nimport { Promotions } from \"./promotions\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nexport const ConfigureStore = () => {\n  const store = createStore(combineReducers(_objectSpread({\n    dishes: Dishes,\n    leaders: Leaders,\n    comments: Comments,\n    promotions: Promotions\n  }, createForms({\n    feedback: InitialFeedback\n  }))), applyMiddleware(thunk, logger));\n  return store;\n};","map":{"version":3,"sources":["/home/priyanka/react-appl/src/Redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","Dishes","Leaders","Comments","Promotions","thunk","logger","ConfigureStore","store","dishes","leaders","comments","promotions","createForms","feedback","InitialFeedback"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D,C,CACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,QAAMC,KAAK,GAAGV,WAAW,CAACC,eAAe;AACjCU,IAAAA,MAAM,EAAER,MADyB;AAEjCS,IAAAA,OAAO,EAAER,OAFwB;AAGjCS,IAAAA,QAAQ,EAAER,QAHuB;AAIjCS,IAAAA,UAAU,EAAER;AAJqB,KAK9BS,WAAW,CAAC;AACKC,IAAAA,QAAQ,EAAEC;AADf,GAAD,CALmB,EAAhB,EASrBf,eAAe,CAACK,KAAD,EAAQC,MAAR,CATM,CAAzB;AAUA,SAAOE,KAAP;AACH,CAZM","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\n// import {Reducer,initialState} from \"./reducer\";\nimport { Dishes } from \"./dishes\";\nimport { Leaders } from \"./leaders\";\nimport { Comments } from \"./comments\";\nimport { Promotions } from \"./promotions\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(combineReducers({\n            dishes: Dishes,\n            leaders: Leaders,\n            comments: Comments,\n            promotions: Promotions,\n            ...createForms({\n                                feedback: InitialFeedback\n                            })\n        }),\n        applyMiddleware(thunk, logger));\n    return store;\n}\n"]},"metadata":{},"sourceType":"module"}